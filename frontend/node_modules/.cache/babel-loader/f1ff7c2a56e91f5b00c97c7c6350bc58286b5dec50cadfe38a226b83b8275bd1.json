{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Django React Projects\\\\dop\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Admin from './components/Admin';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Define state to store logged-in user and admin list\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const adminUsers = ['admin1@example.com', 'admin2@example.com']; // Predefined admin user list\n\n  // Function to handle user login\n  const handleLogin = (userEmail, history) => {\n    setLoggedInUser(userEmail);\n    if (adminUsers.includes(userEmail)) {\n      history.push('/admin');\n    } else {\n      history.push('/dashboard');\n    }\n  };\n\n  // Function to handle user logout\n  const handleLogout = () => {\n    setLoggedInUser(null);\n  };\n\n  // ProtectedRoute component to handle authentication\n  const ProtectedRoute = ({\n    component: Component,\n    isAdmin,\n    ...rest\n  }) => /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: loggedInUser && (isAdmin || rest.path !== '/admin') ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: (userEmail, history) => handleLogin(userEmail, history)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/admin\",\n        component: Admin,\n        isAdmin: adminUsers.includes(loggedInUser)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/dashboard\",\n        component: Dashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VVT4f3QDlmZ0IcBuQY89iRPCH+g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Home","Login","Admin","Dashboard","jsxDEV","_jsxDEV","App","_s","loggedInUser","setLoggedInUser","adminUsers","handleLogin","userEmail","history","includes","push","handleLogout","ProtectedRoute","component","Component","isAdmin","rest","element","path","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","children","exact","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Django React Projects/dop/frontend/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Admin from './components/Admin';\nimport Dashboard from './components/Dashboard';\n\nconst App = () => {\n  // Define state to store logged-in user and admin list\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const adminUsers = ['admin1@example.com', 'admin2@example.com']; // Predefined admin user list\n\n  // Function to handle user login\n  const handleLogin = (userEmail, history) => {\n    setLoggedInUser(userEmail);\n    if (adminUsers.includes(userEmail)) {\n      history.push('/admin');\n    } else {\n      history.push('/dashboard');\n    }\n  };\n\n  // Function to handle user logout\n  const handleLogout = () => {\n    setLoggedInUser(null);\n  };\n\n  // ProtectedRoute component to handle authentication\n  const ProtectedRoute = ({ component: Component, isAdmin, ...rest }) => (\n    <Route\n      {...rest}\n      element={\n        loggedInUser && (isAdmin || rest.path !== '/admin') ? (\n          <Component />\n        ) : (\n          <Login onLogin={(userEmail, history) => handleLogin(userEmail, history)} />\n        )\n      }\n    />\n  );\n\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <ProtectedRoute path=\"/admin\" component={Admin} isAdmin={adminUsers.includes(loggedInUser)} />\n        <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
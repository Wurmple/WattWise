{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Django React Projects\\\\dop\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { Container, Typography, Grid, Paper, Select, MenuItem, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Line Chart'\n    }\n  }\n};\nconst Dashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [billData, setBillData] = useState([]);\n  const [quarterMetricData, setQuarterMetricData] = useState([]);\n  const [monthMetricData, setMonthMetricData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/api/get_data');\n      const data = await response.json();\n      setBillData(data.bill_data);\n      setQuarterMetricData(data.quarter_metric_data);\n      setMonthMetricData(data.month_metric_data);\n      setLoading(false);\n      console.log('Data successfully fetched: ', data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Dummy data for graphs\n  const lineChartData = {\n    labels: data.month_metric_data.map(item => item.Month)\n  };\n  const barChartData = {\n    // ...\n  };\n  const doughnutChartData = {\n    // ...\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      children: \"Data Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"k2KC0GWNXzAcN5BFm5ziShQ9OUc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","Container","Typography","Grid","Paper","Select","MenuItem","CircularProgress","jsxDEV","_jsxDEV","register","options","responsive","plugins","legend","position","title","display","text","Dashboard","_s","loading","setLoading","billData","setBillData","quarterMetricData","setQuarterMetricData","monthMetricData","setMonthMetricData","fetchData","response","fetch","data","json","bill_data","quarter_metric_data","month_metric_data","console","log","error","lineChartData","labels","map","item","Month","barChartData","doughnutChartData","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Django React Projects/dop/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Container, Typography, Grid, Paper, Select, MenuItem, CircularProgress } from '@mui/material';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Line Chart',\r\n    },\r\n  },\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [billData, setBillData] = useState([]);\r\n  const [quarterMetricData, setQuarterMetricData] = useState([]);\r\n  const [monthMetricData, setMonthMetricData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('/api/get_data');\r\n      const data = await response.json();\r\n\r\n      setBillData(data.bill_data);\r\n      setQuarterMetricData(data.quarter_metric_data);\r\n      setMonthMetricData(data.month_metric_data);\r\n      setLoading(false);\r\n      console.log('Data successfully fetched: ', data)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  // Dummy data for graphs\r\n  const lineChartData = {\r\n    labels: data.month_metric_data.map(item => item.Month)\r\n\r\n  };\r\n\r\n  const barChartData = {\r\n    // ...\r\n  };\r\n\r\n  const doughnutChartData = {\r\n    // ...\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h3\" gutterBottom>Data Dashboard</Typography>\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {/* Graph section 1 */}\r\n          {/* Graph section 2 */}\r\n          {/* Graph section 3 */}\r\n          {/* Metric Section 1 */}\r\n          {/* Metric Section 2 */}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Django React Projects\\\\dop\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // Dummy data for graphs\n  const [selectedQuantity, setSelectedQuantity] = useState('Elec Charge');\n  const lineChartData = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [{\n      label: 'Total Electricity Bill (in Rupees)',\n      data: [10000, 15000, 20000, 18000, 22000, 25000, 30000],\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  const barChartData = {\n    labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],\n    datasets: [{\n      label: 'Frequency',\n      data: [20, 30, 25, 35],\n      backgroundColor: 'rgb(255, 99, 132)'\n    }]\n  };\n  const doughnutChartData = {\n    labels: ['Elec Charge', 'Fixed Charge', 'Meter Rent', 'Energy Charge'],\n    datasets: [{\n      label: 'Percentage Split',\n      data: [25, 20, 15, 40],\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 205, 86, 0.6)', 'rgba(75, 192, 192, 0.6)']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.graphsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.graph,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Graph section 1: Month on month trend of total electricity bill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [{\n              label: 'Total Electricity Bill (in Rupees)',\n              data: [10000, 15000, 20000, 18000, 22000, 25000, 30000],\n              fill: false,\n              borderColor: 'rgb(75, 192, 192)',\n              tension: 0.1\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.graph,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Graph section 2: Frequency distribution of avg monthly bill of quarters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.graph,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Graph section 3: Month on month trend of %split of \", selectedQuantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: doughnutChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.metricsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.metricBox,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Metric Section 1: Average monthly bill of quarter ___\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.metricBox,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Metric Section 2: Top 5% average bill quarters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"h5BCim88fgU9XVT6/Udte+tFLHw=\");\n_c = Dashboard;\nconst styles = {\n  graphsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  graph: {\n    flex: 1,\n    padding: '20px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    marginBottom: '20px'\n  },\n  metricsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  metricBox: {\n    flex: 1,\n    padding: '20px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    marginBottom: '20px'\n  }\n};\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Line","Bar","Doughnut","jsxDEV","_jsxDEV","Dashboard","_s","selectedQuantity","setSelectedQuantity","lineChartData","labels","datasets","label","data","fill","borderColor","tension","barChartData","backgroundColor","doughnutChartData","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","graphsContainer","graph","metricsContainer","metricBox","_c","display","justifyContent","flex","padding","border","borderRadius","marginBottom","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Django React Projects/dop/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\n\r\nconst Dashboard = () => {\r\n  // Dummy data for graphs\r\n  const [selectedQuantity, setSelectedQuantity] = useState('Elec Charge');\r\n\r\n  const lineChartData = {\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n    datasets: [\r\n      {\r\n        label: 'Total Electricity Bill (in Rupees)',\r\n        data: [10000, 15000, 20000, 18000, 22000, 25000, 30000],\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const barChartData = {\r\n    labels: ['Quarter 1', 'Quarter 2', 'Quarter 3', 'Quarter 4'],\r\n    datasets: [\r\n      {\r\n        label: 'Frequency',\r\n        data: [20, 30, 25, 35],\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const doughnutChartData = {\r\n    labels: ['Elec Charge', 'Fixed Charge', 'Meter Rent', 'Energy Charge'],\r\n    datasets: [\r\n      {\r\n        label: 'Percentage Split',\r\n        data: [25, 20, 15, 40],\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.6)',\r\n          'rgba(54, 162, 235, 0.6)',\r\n          'rgba(255, 205, 86, 0.6)',\r\n          'rgba(75, 192, 192, 0.6)',\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Data Dashboard</h2>\r\n      <div style={styles.graphsContainer}>\r\n        <div style={styles.graph}>\r\n          <h3>Graph section 1: Month on month trend of total electricity bill</h3>\r\n          <Line \r\n  data={{\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n    datasets: [\r\n      {\r\n        label: 'Total Electricity Bill (in Rupees)',\r\n        data: [10000, 15000, 20000, 18000, 22000, 25000, 30000],\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  }}\r\n/>\r\n        </div>\r\n        <div style={styles.graph}>\r\n          <h3>Graph section 2: Frequency distribution of avg monthly bill of quarters</h3>\r\n          <Bar data={barChartData} />\r\n        </div>\r\n        <div style={styles.graph}>\r\n          <h3>Graph section 3: Month on month trend of %split of {selectedQuantity}</h3>\r\n          <Doughnut data={doughnutChartData} />\r\n        </div>\r\n      </div>\r\n      <div style={styles.metricsContainer}>\r\n        {/* Metric Section 1 */}\r\n        <div style={styles.metricBox}>\r\n          <h3>Metric Section 1: Average monthly bill of quarter ___</h3>\r\n          {/* Add dropdown for selecting quarter */}\r\n        </div>\r\n        {/* Metric Section 2 */}\r\n        <div style={styles.metricBox}>\r\n          <h3>Metric Section 2: Top 5% average bill quarters</h3>\r\n          {/* Add list of top 5% average bill quarters */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  graphsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  graph: {\r\n    flex: 1,\r\n    padding: '20px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    marginBottom: '20px',\r\n  },\r\n  metricsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  metricBox: {\r\n    flex: 1,\r\n    padding: '20px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    marginBottom: '20px',\r\n  },\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}